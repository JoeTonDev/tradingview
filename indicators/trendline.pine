//@version=5
indicator("Custom Trend Line Indicator", overlay=true)

// Parameters for pivot highs and lows
pivotLookback = input.int(10, title="Pivot Lookback")
testCount = input.int(3, title="Number of Tests for Trend Line")

// Identify pivot highs and lows
pivotHigh = ta.pivothigh(high, pivotLookback, pivotLookback)
pivotLow = ta.pivotlow(low, pivotLookback, pivotLookback)

// Initialize arrays to store pivot points
var float[] pivotHighs = array.new_float(0)
var float[] pivotLows = array.new_float(0)

// Add pivot points to arrays
if not na(pivotHigh)
    array.push(pivotHighs, pivotHigh)

if not na(pivotLow)
    array.push(pivotLows, pivotLow)

// Function to draw trend lines
drawTrendLine(points, isHigh) =>
    var line trendLine = na
    if array.size(points) >= 2
        for i = 1 to array.size(points) - 1
            x1 = ta.valuewhen(close == array.get(points, i-1), bar_index, 0)
            y1 = array.get(points, i-1)
            x2 = ta.valuewhen(close == array.get(points, i), bar_index, 0)
            y2 = array.get(points, i)
            trendLine := line.new(x1, y1, x2, y2, color=color.blue, width=2)
    [trendLine, isHigh]

// Draw initial trend lines
[highTrendLine, _] = drawTrendLine(pivotHighs, true)
[lowTrendLine, _] = drawTrendLine(pivotLows, false)

// RSI for overbought/oversold conditions
rsiPeriod = input.int(14, title="RSI Period")
rsi = ta.rsi(close, rsiPeriod)

// Overbought and oversold levels
overboughtLevel = input.int(70, title="Overbought Level")
oversoldLevel = input.int(30, title="Oversold Level")

// Function to check trend line tests
isTestedTrendLine(trendLine, count) =>
    var testCounter = 0
    for i = 1 to count
        testPrice = na(trendLine) ? na : line.get_price(trendLine, bar_index[i])
        if na(testPrice)
            continue
        if close[i] <= testPrice * 1.01 and close[i] >= testPrice * 0.99
            testCounter := testCounter + 1
    testCounter >= count

// Generate signals
var int buySignal = na
var int sellSignal = na

if isTestedTrendLine(lowTrendLine, testCount) and rsi <= oversoldLevel and close < line.get_price(lowTrendLine, bar_index)
    buySignal := bar_index

if isTestedTrendLine(highTrendLine, testCount) and rsi >= overboughtLevel and close > line.get_price(highTrendLine, bar_index)
    sellSignal := bar_index

// Plot signals
plotshape(series=buySignal, location=location.belowbar, color=color.green, style=shape.labelup, text="Buy")
plotshape(series=sellSignal, location=location.abovebar, color=color.red, style=shape.labeldown, text="Sell")
